//
// ContainerUpdateConfig.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ContainerUpdateConfig: Codable, Hashable {

    /** An integer value representing this container's relative CPU weight versus other containers.  */
    public var cpuShares: Int64? = nil
    /** Memory limit in bytes. */
    public var memory: Int64? = 0
    /** Path to `cgroups` under which the container's `cgroup` is created. If the path is not absolute, the path is considered to be relative to the `cgroups` path of the init process. Cgroups are created if they do not already exist.  */
    public var cgroupParent: String? = nil
    /** Block IO weight (relative weight). */
    public var blkioWeight: Int? = nil
    /** Block IO weight (relative device weight) in the form:  ``` [{\"Path\": \"device_path\", \"Weight\": weight}] ```  */
    public var blkioWeightDevice: [ResourcesBlkioWeightDevice]? = nil
    /** Limit read rate (bytes per second) from a device, in the form:  ``` [{\"Path\": \"device_path\", \"Rate\": rate}] ```  */
    public var blkioDeviceReadBps: [ThrottleDevice]? = nil
    /** Limit write rate (bytes per second) to a device, in the form:  ``` [{\"Path\": \"device_path\", \"Rate\": rate}] ```  */
    public var blkioDeviceWriteBps: [ThrottleDevice]? = nil
    /** Limit read rate (IO per second) from a device, in the form:  ``` [{\"Path\": \"device_path\", \"Rate\": rate}] ```  */
    public var blkioDeviceReadIOps: [ThrottleDevice]? = nil
    /** Limit write rate (IO per second) to a device, in the form:  ``` [{\"Path\": \"device_path\", \"Rate\": rate}] ```  */
    public var blkioDeviceWriteIOps: [ThrottleDevice]? = nil
    /** The length of a CPU period in microseconds. */
    public var cpuPeriod: Int64? = nil
    /** Microseconds of CPU time that the container can get in a CPU period.  */
    public var cpuQuota: Int64? = nil
    /** The length of a CPU real-time period in microseconds. Set to 0 to allocate no time allocated to real-time tasks.  */
    public var cpuRealtimePeriod: Int64? = nil
    /** The length of a CPU real-time runtime in microseconds. Set to 0 to allocate no time allocated to real-time tasks.  */
    public var cpuRealtimeRuntime: Int64? = nil
    /** CPUs in which to allow execution (e.g., `0-3`, `0,1`).  */
    public var cpusetCpus: String? = nil
    /** Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.  */
    public var cpusetMems: String? = nil
    /** A list of devices to add to the container. */
    public var devices: [DeviceMapping]? = nil
    /** a list of cgroup rules to apply to the container */
    public var deviceCgroupRules: [String]? = nil
    /** A list of requests for devices to be sent to device drivers.  */
    public var deviceRequests: [DeviceRequest]? = nil
    /** Kernel memory limit in bytes.  <p><br /></p>  > **Deprecated**: This field is deprecated as the kernel 5.4 deprecated > `kmem.limit_in_bytes`.  */
    public var kernelMemory: Int64? = nil
    /** Hard limit for kernel TCP buffer memory (in bytes). */
    public var kernelMemoryTCP: Int64? = nil
    /** Memory soft limit in bytes. */
    public var memoryReservation: Int64? = nil
    /** Total memory limit (memory + swap). Set as `-1` to enable unlimited swap.  */
    public var memorySwap: Int64? = nil
    /** Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100.  */
    public var memorySwappiness: Int64? = nil
    /** CPU quota in units of 10<sup>-9</sup> CPUs. */
    public var nanoCpus: Int64? = nil
    /** Disable OOM Killer for the container. */
    public var oomKillDisable: Bool? = nil
    /** Run an init inside the container that forwards signals and reaps processes. This field is omitted if empty, and the default (as configured on the daemon) is used.  */
    public var _init: Bool? = nil
    /** Tune a container's PIDs limit. Set `0` or `-1` for unlimited, or `null` to not change.  */
    public var pidsLimit: Int64? = nil
    /** A list of resource limits to set in the container. For example:  ``` {\"Name\": \"nofile\", \"Soft\": 1024, \"Hard\": 2048} ```  */
    public var ulimits: [ResourcesUlimits]? = nil
    /** The number of usable CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last.  */
    public var cpuCount: Int64? = nil
    /** The usable percentage of the available CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last.  */
    public var cpuPercent: Int64? = nil
    /** Maximum IOps for the container system drive (Windows only) */
    public var iOMaximumIOps: Int? = nil
    /** Maximum IO in bytes per second for the container system drive (Windows only).  */
    public var iOMaximumBandwidth: Int? = nil
    public var restartPolicy: RestartPolicy? = nil

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case cpuShares = "CpuShares"
        case memory = "Memory"
        case cgroupParent = "CgroupParent"
        case blkioWeight = "BlkioWeight"
        case blkioWeightDevice = "BlkioWeightDevice"
        case blkioDeviceReadBps = "BlkioDeviceReadBps"
        case blkioDeviceWriteBps = "BlkioDeviceWriteBps"
        case blkioDeviceReadIOps = "BlkioDeviceReadIOps"
        case blkioDeviceWriteIOps = "BlkioDeviceWriteIOps"
        case cpuPeriod = "CpuPeriod"
        case cpuQuota = "CpuQuota"
        case cpuRealtimePeriod = "CpuRealtimePeriod"
        case cpuRealtimeRuntime = "CpuRealtimeRuntime"
        case cpusetCpus = "CpusetCpus"
        case cpusetMems = "CpusetMems"
        case devices = "Devices"
        case deviceCgroupRules = "DeviceCgroupRules"
        case deviceRequests = "DeviceRequests"
        case kernelMemory = "KernelMemory"
        case kernelMemoryTCP = "KernelMemoryTCP"
        case memoryReservation = "MemoryReservation"
        case memorySwap = "MemorySwap"
        case memorySwappiness = "MemorySwappiness"
        case nanoCpus = "NanoCpus"
        case oomKillDisable = "OomKillDisable"
        case _init = "Init"
        case pidsLimit = "PidsLimit"
        case ulimits = "Ulimits"
        case cpuCount = "CpuCount"
        case cpuPercent = "CpuPercent"
        case iOMaximumIOps = "IOMaximumIOps"
        case iOMaximumBandwidth = "IOMaximumBandwidth"
        case restartPolicy = "RestartPolicy"
    }
}

